{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\musaa\\\\Documents\\\\to-do_list\\\\client\\\\src\\\\screens\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport SERVER from \"../config/config\";\nimport axios from \"axios\";\nimport SpecialButton from \"../components/SpecialButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [task, setTask] = useState(\"\");\n  const [list, updateList] = useState([]);\n\n  const loadList = () => {\n    axios.get(SERVER).then(res => {\n      updateList(res.data);\n    });\n  };\n\n  useEffect(loadList, []);\n\n  const postTask = () => {\n    axios.post(SERVER, {\n      task\n    }).then(res => updateList(res.data));\n    setTask(\"\");\n  };\n\n  const updateTask = (event, index) => {\n    let value = event.target.value;\n    axios.put(SERVER + String(index + 1), {\n      value\n    }).then(res => updateList(res.data));\n  };\n\n  const deleteTask = index => {\n    axios.delete(SERVER + String(index + 1)).then(res => updateList(res.data));\n  };\n\n  const adjustTask = (event, index) => {\n    let temp = [...list];\n    temp[index] = event.target.value;\n    updateList(temp);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"header\",\n      children: \"TO-DO LIST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"neat\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: task,\n        className: \"input add\",\n        onChange: event => setTask(event.target.value),\n        onKeyDown: e => {\n          if (e.key === \"Enter\") {\n            postTask();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SpecialButton, {\n        onClick: postTask,\n        className: \"button-add\",\n        value: \"ADD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: list.map((_, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"neat\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input delete\",\n            value: list[index],\n            style: {\n              backgroundColor: index % 2 === 0 ? \"white\" : \"#f0eff1\"\n            },\n            onChange: event => adjustTask(event, index),\n            onBlur: event => updateTask(event, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SpecialButton, {\n            onClick: () => deleteTask(index),\n            className: \"button-delete\",\n            value: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"NvaQzDtHgabXW9jMWyFncFnEYzU=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/musaa/Documents/to-do_list/client/src/screens/Main.js"],"names":["React","useState","useEffect","SERVER","axios","SpecialButton","Main","task","setTask","list","updateList","loadList","get","then","res","data","postTask","post","updateTask","event","index","value","target","put","String","deleteTask","delete","adjustTask","temp","e","key","map","_","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport SERVER from \"../config/config\";\r\nimport axios from \"axios\";\r\nimport SpecialButton from \"../components/SpecialButton\";\r\n\r\nconst Main = () => {\r\n  const [task, setTask] = useState(\"\");\r\n  const [list, updateList] = useState([]);\r\n\r\n  const loadList = () => {\r\n    axios.get(SERVER).then((res) => {\r\n      updateList(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(loadList, []);\r\n\r\n  const postTask = () => {\r\n    axios.post(SERVER, { task }).then((res) => updateList(res.data));\r\n    setTask(\"\");\r\n  };\r\n\r\n  const updateTask = (event, index) => {\r\n    let value = event.target.value;\r\n\r\n    axios\r\n      .put(SERVER + String(index + 1), { value })\r\n      .then((res) => updateList(res.data));\r\n  };\r\n\r\n  const deleteTask = (index) => {\r\n    axios\r\n      .delete(SERVER + String(index + 1))\r\n      .then((res) => updateList(res.data));\r\n  };\r\n\r\n  const adjustTask = (event, index) => {\r\n    let temp = [...list];\r\n    temp[index] = event.target.value;\r\n    updateList(temp);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <p className=\"header\">TO-DO LIST</p>\r\n      <div className=\"neat\">\r\n        <input\r\n          value={task}\r\n          className=\"input add\"\r\n          onChange={(event) => setTask(event.target.value)}\r\n          onKeyDown={(e) => {\r\n            if (e.key === \"Enter\") {\r\n              postTask()\r\n            }\r\n          }}\r\n        />\r\n        <SpecialButton onClick={postTask} className=\"button-add\" value=\"ADD\" />\r\n      </div>\r\n      <ul className=\"list\">\r\n        {list.map((_, index) => {\r\n          return (\r\n            <li className=\"neat\">\r\n              <input\r\n                className=\"input delete\"\r\n                value={list[index]}\r\n                style={{\r\n                  backgroundColor: index % 2 === 0 ? \"white\" : \"#f0eff1\",\r\n                }}\r\n                onChange={(event) => adjustTask(event, index)}\r\n                onBlur={(event) => updateTask(event, index)}\r\n              />\r\n              <SpecialButton\r\n                onClick={() => deleteTask(index)}\r\n                className=\"button-delete\"\r\n                value=\"x\"\r\n              />\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}